version: '3.4'

services:
  rabbit:
    container_name: rabbit.mq
    restart: always
    image: rabbitmq:management
    ports:
      - "15673:15673"
      - "5673:5673"
    networks:
      - benefit-compose-network

  postgres:
    container_name: postgres.db
    restart: always
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=guest      
      - POSTGRES_PASSWORD=guest
      - POSTGRES_DB=Benefit
    networks:
      - benefit-compose-network
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  pgadmin:
    container_name: postgres.admin
    restart: always  
    image: dpage/pgadmin4
    ports:
      - "8002:80"
    depends_on:
      - postgres
    environment:
      - PGADMIN_DEFAULT_EMAIL=guest@guest.com
      - PGADMIN_DEFAULT_PASSWORD=guest
    networks:
      - benefit-compose-network
    volumes:
      - postgres_admin_data:/root/.pgadmin
     
  benefit.api:
    restart: always  
    container_name: benefit.api
    image: ${DOCKER_REGISTRY-}benefitapi
    ports:
      - "8001:80"
    build:
      context: .
      dockerfile: Benefit.API/Dockerfile
    depends_on:
      - rabbit
      - postgres
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RABBIT_MQ=amqp://guest:guest@rabbit:5673
      - DATABASE_CONNECTION=Host=postgres;Database=Benefit;Port=5432;Username=guest;Password=guest
    volumes:
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    networks:
      - benefit-compose-network
      
  #benefit.consumer.worker:
  #  container_name: benefit.consumer.worker
  #  image: ${DOCKER_REGISTRY-}benefitconsumerworker
  #  build:
  #    context: .
  #    dockerfile: Benefit.Consumer.Worker/Dockerfile
  #  depends_on:
  #    - rabbit
  #    - postgres
  #  environment:
  #    - RABBIT_MQ=amqp://guest:guest@rabbit:5673
  #    - DATABASE_CONNECTION=Host=postgres;Database=Benefit;Port=5432;Username=guest;Password=guest
  #  networks:
  #    - benefit-compose-network

volumes:
  postgres_data:
  postgres_admin_data:

networks:
  benefit-compose-network:
    driver: bridge